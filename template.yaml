AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: the leech pipeline for migrating information into the leech data system
Parameters:
  IsDev:
    Type: String
    Default: 'False'
    AllowedValues:
      - 'False'
      - 'True'
  DevApiKey:
    Type: String
    Description: if dev mode is enabled, the API requires an API key instead of auth sig
    Default: ''
  DataGqlEndpoint:
    Type: String
    Description: the endpoint of the GQL API used to interface with the data layer
    Default: 'yiawofjaffgrvlzyg2f6xnjzty.appsync-api.us-east-1.amazonaws.com'
  LayerArn:
    Type: String
    Description: the lambda layer containing the common dependencies
    Default: 'arn:aws:lambda:us-east-1:726075243133:layer:algLayer:4'
  SensitivesTableName:
    Type: String
    Description: the table holding the PHI information
    Default: 'Sensitives'

Conditions:
  DevDeploy: !Equals [!Ref IsDev, 'True']
  ProdDeploy: !Equals [!Ref IsDev, 'False']

Globals:
  Function:
    Runtime: python3.6
    Timeout: 300
    Tracing: Active
    Layers:
      - !Ref LayerArn
    Environment:
      Variables:
        DEBUG: !Ref IsDev
        GQL_API_KEY: !If [DevDeploy, !Ref DevApiKey, '']
        SENSITIVES_TABLE_NAME: !Ref SensitivesTableName
        GRAPH_GQL_ENDPOINT: !Ref DataGqlEndpoint

Resources:
  Task:
    Type: AWS::Serverless::Function
    Properties:
      Handler: toll_booth.tasks.leech.task
      Role: !ImportValue dev-worker-role-arn
      CodeUri: src/
  Oyster:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:726075243133:applications/AlgernonOyster
        SemanticVersion: 0.0.23
      Parameters:
        IsDev: !Ref IsDev
        OysterBedName: 'AlgernonsOyster'
        TaskFunctionArn: !GetAtt Task.Arn
Outputs:
  LeechFunction:
    Description: "task function ARN"
    Value: !GetAtt Task.Arn
  ListenerArn:
    Description: "the ARN endpoint for the task module"
    Value: !GetAtt Oyster.Outputs.ShuckLineListener
    Export:
      Name: !Sub "${AWS::StackName}-leech-listener"